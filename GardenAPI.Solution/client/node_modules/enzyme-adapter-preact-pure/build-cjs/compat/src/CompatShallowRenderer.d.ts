import type { ShallowRenderer as AbstractShallowRenderer, RSTNode, ShallowRenderOptions } from 'enzyme';
import type { VNode } from 'preact';
import type { EventDetails } from '../../src/MountRenderer.js';
/**
 * A shallow renderer that natively shallow renders Preact components by not
 * relying on a document and overriding children to return null. It relies on a
 * copy of Preact's diff algorithm, modified to not descend and diff children of
 * the given element.
 */
export default class CompatShallowRenderer implements AbstractShallowRenderer {
    private _renderer;
    private _cachedNode;
    constructor();
    render(el: VNode, context?: any, options?: ShallowRenderOptions): import("preact").ComponentChild;
    simulateError(nodeHierarchy: RSTNode[], rootNode: RSTNode, error: any): void;
    simulateEvent(node: RSTNode, eventName: string, args: EventDetails): void;
    unmount(): void;
    getNode(): {
        nodeType: import("enzyme").NodeType;
        type: string | import("preact").ComponentType<any>;
        props: any;
        key: any;
        ref: import("preact").Ref<any> | undefined;
        instance: import("preact").Component<any, any> | null;
        rendered: import("enzyme").RSTNodeChild[];
    } | null;
    batchedUpdates(fn: () => any): void;
}
